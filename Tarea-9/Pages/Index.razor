@page "/"
@using Models 
@using System.Net.Mail;
@using System.Text.RegularExpressions;

<div>
    <h1 class="text-center">Formulario para ser vacunado en casa</h1>
    <hr />
    <br />
    <div class="card" style="width: 55rem;">
        <div class="card-body">
            <h5 class="card-title" style="text-align: center;">Datos Requeridos</h5>
            <input type="text" class="form-control" placeholder="Cedula" @bind="cedula" />
            <input type="text" class="form-control" placeholder="Nombre" @bind="nombre" />
            <input type="text" class="form-control" placeholder="Apellido" @bind="apellido" />
            <input type="text" class="form-control" placeholder="Teléfono" @bind="telefono" />
            <input type="text" class="form-control" placeholder="Correo Electrónico" @bind="correo" />
            <input type="text" class="form-control" placeholder="Fecha de Nacimiento" @bind="fecha_nacimiento" />
            <select @bind="tipo_sangre" class="form-control">
                <option value="" disabled selected hidden>Tipo de sangre</option>
                <option value="A+">A+</option>
                <option value="A-">A-</option>
                <option value="B+">B+</option>
                <option value="B-">B-</option>
                <option value="O+">O+</option>
                <option value="O-">O-</option>
                <option value="AB+">AB+</option>
                <option value="AB-">AB-</option>
            </select>
            <input type="text" class="form-control" placeholder="Provincia" @bind="provincia" />
            <input type="text" class="form-control" placeholder="Dirección" @bind="direccion" />
            <input type="text" class="form-control" placeholder="Latitud" @bind="lat" />
            <input type="text" class="form-control" placeholder="Longitud" @bind="lon" />
            <select @bind="covid" class="form-control">
                <option value="" disabled selected hidden>¿Le dio covid?</option>
                <option value="Si">Si</option>
                <option value="No">No</option>
            </select>
            <input type="text" class="form-control" placeholder="Justifique" @bind="justificacion" />
            <button class="btn btn-primary" @onclick="AgregarVacuna" id="btnejemplo">Enviar datos</button>
        </div>
    </div>
    <br /><br />

    <div id="ca">
        @if (mensaje == 1)
        {
            <div class="alert alert-success" role="alert">
                Gracias por enviar los datos Sr/a. @nombre
            </div>
        }

        @if (mensaje_error == 1)
        {
            <div class="alert alert-danger" role="alert">
                Ya su solicitud fue registrada, se envió una confirmación al correo: @correo_verificado favor verificar.
            </div>
        }

        @if (mensaje_vacio == 1)
        {
            <div class="alert alert-danger" role="alert">
                Por favor complete todos los datos.
            </div>
        }

          @if (mensaje_vacio == 15)
        {
            <div class="alert alert-danger" role="alert">
                Favor de ingresar un correo Valido
            </div>
        }
    </div>
</div>
<hr>

@code{

    private string Menssage{get;set;} = "";
    string cedula = "", nombre = "", apellido = "", telefono = "", correo = "",
        fecha_nacimiento = "", tipo_sangre = "", provincia = "", direccion = "", lat = "", lon = "", covid = "";

    int mensaje = 0, mensaje_error = 0, mensaje_vacio = 0;
    string justificacion = "";
    string correo_verificado;
    string recibido="Saludos,<br> Muchas gracias por registrarte en la jornardada de Prevencion del Covid-19.";
    bool validar;

    public void AgregarVacuna()
    {
        using (db_a72461_backupContext contexto = new db_a72461_backupContext())
        {
            validar = contexto.Vacunas.Any(ee => ee.Cedula == cedula);

            if (validar)
            {
                Vacunas va = contexto.Vacunas
                        .Where(e => e.Cedula == cedula)
                        .FirstOrDefault();

                correo_verificado = va.Correo;
                mensaje = 0;
                mensaje_vacio = 0;
                mensaje_error = 1;
            }

            else
            {
                Vacunas vacu = new Vacunas();
                vacu.Cedula = cedula;
                vacu.Nombre = nombre;
                vacu.Apellido = apellido;
                vacu.Telefono = telefono;
                vacu.Correo = correo;
                vacu.FechaNacimiento = fecha_nacimiento;
                vacu.TipoSangre = tipo_sangre;
                vacu.Provincia = provincia;
                vacu.Direccion = direccion;
                vacu.Latitud = lat;
                vacu.Longitud = lon;
                vacu.Covid = covid;
                vacu.Justifique = justificacion;

                if (vacu.Cedula == "" || vacu.Nombre == "" || vacu.Apellido == "" || vacu.Telefono == "" || vacu.Correo == "" ||
                    vacu.FechaNacimiento == "" || vacu.TipoSangre == "" || vacu.Provincia == "" || vacu.Direccion == "" || vacu.Latitud == "" ||
                    vacu.Longitud == "" || vacu.Covid == "" || vacu.Justifique == "")
                {
                    mensaje = 0;
                    mensaje_error = 0;
                    mensaje_vacio = 1;
                }

                else
                {
                    if(IsValidEmail(vacu.Correo)){
                        contexto.Add(vacu);
                        contexto.SaveChanges();
                        mensaje_error = 0;
                        mensaje_vacio = 0;
                        mensaje = 1;

                        SenMail(vacu.Correo,recibido);


                    

                       cedula = "";
                       apellido = "";
                       telefono = "";
                       correo = "";
                       fecha_nacimiento = "";
                       tipo_sangre = "";
                       provincia = "";
                       direccion = "";
                       lat = "";
                       lon = "";
                       covid = "";
                       justificacion = "";
                    }else{
                            mensaje_vacio = 15;
                    }
                    
                }
            }

        }
    }


    @*metodo valida si el correo es un correo valido*@
    public static bool IsValidEmail(string strMailAddress)
        {
        // Return true if strIn is in valid e-mail format.
        return Regex.IsMatch(strMailAddress, @"^(?("")("".+?""@)|(([0-9a-zA-Z]((\.(?!\.))|[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)(?<=[0-9a-zA-Z])@))" + @"(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,6}))$");
    }

    @*METODO QUE MANDA EL CORREO*@
    private void SenMail(String enviar1,String mensajeEnviar){
        try{
            using(MailMessage mail = new MailMessage()){
                mail.From = new MailAddress("calkin440040@gmail.com");
                mail.To.Add(enviar1);
                mail.Subject = "Registro de Vacuna por Casa.";
                mail.Body = (mensajeEnviar);
                mail.IsBodyHtml = true;

                using (SmtpClient smtp = new SmtpClient("smtp.gmail.com",587)){
                    smtp.Credentials = new System.Net.NetworkCredential("calkin440040@gmail.com","And440040");
                    smtp.EnableSsl = true;
                    smtp.Send(mail);
                    Menssage = "Mail Sent";
                    
                }
            }
            
        }catch(Exception ex){
            Menssage = ex.Message;
        }
    }

}
